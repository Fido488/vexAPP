/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package guiFrames;

import ActionPacks.TeamRank;
import ActionPacks.matchReader;
import Objects.MatchObject;
import Objects.TeamRankedObject;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jonathanleitschuh
 */
public class teamRankingFrame extends javax.swing.JFrame {
    private ArrayList<TeamRankedObject> matches = null;
    private DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form teamRankingFrame
     */
    public teamRankingFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        teamListScroll = new javax.swing.JScrollPane();
        teamList = new javax.swing.JTable();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        getContentPane().setLayout(layout);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Team Ratings"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        teamListScroll.setPreferredSize(new java.awt.Dimension(450, 400));

        TeamRank rank = new TeamRank();
        rank.rank();
        matches = rank.getRanked();
        teamList.setModel(model
        );
        teamList.getTableHeader().setReorderingAllowed(false);
        model.setColumnIdentifiers(new String[] {"ID #", "Team Name", "Matches", "Matches Missed", "Av. Score", "Av. Opponent", "Av. Iso Auton",
            "Av. Inter Auton", "Superion Robot", "Disqualified", "W", "T", "L", "WP", "SP"});
    for (TeamRankedObject p : matches)
    {
        model.addRow(new Object[] {(p.getId()), p.getTeamShortListNumb(), p.getMatches(),
            p.getMatchesMissed(), p.getAverageScore(), p.getAverageOpponentScore(), p.getAverageIsolationAuton(), p.getAverageInteractionAuton(),
            p.getSuperiorRobot(), p.getDisqualified(), p.getWin(), p.getTie(), p.getLoss(), p.getWinPoints(), p.getStrengthPoints()});
    }

    int nameWidth = 175;
    int c = 0;
    teamList.getColumnModel().getColumn(c).setPreferredWidth(20);
    teamList.getColumnModel().getColumn(c).setWidth(20);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //1
    teamList.getColumnModel().getColumn(c).setPreferredWidth(nameWidth);
    teamList.getColumnModel().getColumn(c).setWidth(nameWidth);
    teamList.getColumnModel().getColumn(c).setResizable(true);

    c++; //2
    teamList.getColumnModel().getColumn(c).setPreferredWidth(50);
    teamList.getColumnModel().getColumn(c).setWidth(50);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //3
    teamList.getColumnModel().getColumn(c).setPreferredWidth(100);
    teamList.getColumnModel().getColumn(c).setWidth(100);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++;//4
    teamList.getColumnModel().getColumn(c).setPreferredWidth(55);
    teamList.getColumnModel().getColumn(c).setWidth(55);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //5
    teamList.getColumnModel().getColumn(c).setPreferredWidth(75);
    teamList.getColumnModel().getColumn(c).setWidth(75);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //6
    teamList.getColumnModel().getColumn(c).setPreferredWidth(75);
    teamList.getColumnModel().getColumn(c).setWidth(75);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //7
    teamList.getColumnModel().getColumn(c).setPreferredWidth(100);
    teamList.getColumnModel().getColumn(c).setWidth(100);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //8
    teamList.getColumnModel().getColumn(c).setPreferredWidth(90);
    teamList.getColumnModel().getColumn(c).setWidth(90);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //9
    teamList.getColumnModel().getColumn(c).setPreferredWidth(70);
    teamList.getColumnModel().getColumn(c).setWidth(70);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //10
    teamList.getColumnModel().getColumn(c).setPreferredWidth(15);
    teamList.getColumnModel().getColumn(c).setWidth(15);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //11
    teamList.getColumnModel().getColumn(c).setPreferredWidth(15);
    teamList.getColumnModel().getColumn(c).setWidth(15);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //12
    teamList.getColumnModel().getColumn(c).setPreferredWidth(15);
    teamList.getColumnModel().getColumn(c).setWidth(15);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //13
    teamList.getColumnModel().getColumn(c).setPreferredWidth(15);
    teamList.getColumnModel().getColumn(c).setWidth(15);
    teamList.getColumnModel().getColumn(c).setResizable(false);

    c++; //14
    teamList.getColumnModel().getColumn(c).setPreferredWidth(15);
    teamList.getColumnModel().getColumn(c).setWidth(15);
    teamList.getColumnModel().getColumn(c).setResizable(false);
    teamListScroll.setViewportView(teamList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 560;
    gridBagConstraints.ipady = 300;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    jPanel1.add(teamListScroll, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 580;
    gridBagConstraints.ipady = 300;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(jPanel1, gridBagConstraints);

    backButton.setText("<< Back");
    backButton.setToolTipText("Go Back");
    backButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButtonActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    getContentPane().add(backButton, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        matchListFrame frame = new matchListFrame();
        frame.setSize(this.getWidth(), getHeight());
        frame.setLocation(this.getX(), this.getY());
        frame.setVisible(true);
        //this.setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teamRankingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teamRankingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teamRankingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teamRankingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new teamRankingFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable teamList;
    private javax.swing.JScrollPane teamListScroll;
    // End of variables declaration//GEN-END:variables
}
